---
- name: "make sure we're running against a RedHat family OS"
  fail: "This playbook has only been tested against CentOS 6.x Please choose your target system accordingly."
  when: ansible_os_family != "RedHat"

- name: "Tell the user what system this is running against. "
  debug: msg="NOTICE- RUNNING THIS PLAYBOOK AGAINST {{ ansible_nodename }}"

- name: "Make sure required software is installed and up to date."
  yum: name={{ item }} state=latest
  with_items:
    - epel-release
    - nginx
    - git

- name: "NOTICE- STOPPING AND DISABLING THE IPTABLES FIREWALL!"
  service: name=iptables enabled=no state=stopped #must_exist=no #must_exist only works in >= ans2.0

- name: "Stop nginx if it is already running."
  service: name=nginx state=stopped
  notify: "Enable and start NginX"

- name: "Make sure the desired port is currently in use." 
  wait_for: port={{ portNumber }} state=stopped timeout=10

- name: "Check if conf.available exists"
  stat: path=/etc/nginx/conf.available
  register: confAvailExists

- name: "Check for errant file called conf.available."
  fail: msg="Cannot proceed, there is a preexisting file (not a directory) called conf.available."
  when: confAvailExists.stat.exists and not confAvailExists.stat.isdir #evaluation stops after first term so undefined var is ignored

- name: "Rename conf.d to conf.available."
  command: mv /etc/nginx/conf.d /etc/nginx/conf.available
  when: not confAvailExists.stat.exists

- name: "Make sure your config file exists in conf.available."
  template: src=vhost.j2 dest=/etc/nginx/conf.available/{{ portNumber }}.conf owner=root group=root mode=0644

- name: "Make sure that /etc/nginx/conf.d exists."
  file: state=directory path=/etc/nginx/conf.d owner=root group=root mode=0755

- name: "Get a list of existing nginx config files." 
  command: ls -1 /etc/nginx/conf.d/ 
  register: confFiles 

- name: "Delete any existing NginX config file links."
  file: path=/etc/nginx/conf.d/{{ item }} state=absent
  with_items: confFiles.stdout_lines

- name: "Link your file in to the conf.d."
  file: src=/etc/nginx/conf.available/{{ portNumber }}.conf dest=/etc/nginx/conf.d/{{ portNumber }}.conf state=link owner=root group=root mode=0644
  notify: "Enable and start NginX"

- name: "Ensure existance of /var/www/{{ portNumber }}."
  file: name=/var/www/{{ portNumber }} state=directory owner=root group=root mode=0755
  #todo: set appropriate permissions, make port number a variable

- name: "Get web content from provided link."
  git: repo={{ gitRepo }} dest=/var/www/{{ portNumber }} update=yes

